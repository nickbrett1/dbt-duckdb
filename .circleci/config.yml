version: 2.1

jobs:
  download_population:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout

      # Install rclone via curl
      - run:
          name: Install rclone
          command: |
            curl https://rclone.org/install.sh | sudo bash

      # Restore pip cache
      - restore_cache:
          keys:
            - pip-cache-{{ checksum "requirements.txt" }}

      # Install pip modules from requirements.txt
      - run:
          name: Install pip modules
          command: pip install -r requirements.txt

      # Save pip cache for subsequent builds
      - save_cache:
          paths:
            - ~/.cache/pip
          key: pip-cache-{{ checksum "requirements.txt" }}

      # Run the population download script
      - run:
          name: Download Population Data
          command: python download_population.py

  download_wdi:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout

      # Install rclone
      - run:
          name: Install rclone
          command: |
            curl https://rclone.org/install.sh | sudo bash

      # Restore pip cache
      - restore_cache:
          keys:
            - pip-cache-{{ checksum "requirements.txt" }}

      # Install pip modules
      - run:
          name: Install pip modules
          command: pip install -r requirements.txt

      # Save pip cache
      - save_cache:
          paths:
            - ~/.cache/pip
          key: pip-cache-{{ checksum "requirements.txt" }}

      # Run the WDI download script
      - run:
          name: Download WDI Data
          command: python download_wdi.py

  transform:
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout

      # Install rclone
      - run:
          name: Install rclone
          command: |
            curl https://rclone.org/install.sh | sudo bash

      # Install sqlite3 (or other dependencies as needed)
      - run:
          name: Install sqlite3
          command: sudo apt-get update && sudo apt-get install -y sqlite3

      # Restore pip cache
      - restore_cache:
          keys:
            - pip-cache-{{ checksum "requirements.txt" }}

      # Install pip modules
      - run:
          name: Install pip modules
          command: pip install -r requirements.txt

      # Save pip cache
      - save_cache:
          paths:
            - ~/.cache/pip
          key: pip-cache-{{ checksum "requirements.txt" }}

      # Run the populate script (which reads from Cloudflare R2)
      - run:
          name: Populate Databases
          command: python populate.py --use-duckdb

      # Run dbt run
      - run:
          name: Run dbt run
          command: dbt run

      # Generate dbt docs
      - run:
          name: Generate dbt docs
          command: dbt docs generate

workflows:
  download_transform_and_load:
    jobs:
      - download_population
      - download_wdi
      - transform:
          requires:
            - download_population
            - download_wdi